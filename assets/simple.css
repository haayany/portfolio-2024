/* Base (Default) theme variables - Neutral colors to avoid flash on toggle */
:root {
    /* Set sans-serif & mono fonts */
    --title-font: 'Anybody', sans-serif;
    --body-font: 'Barlow', sans-serif;
    --sans-font: 'Barlow', sans-serif;
    --mono-font: Consolas, Menlo, Monaco, "Andale Mono", "Ubuntu Mono", monospace;
    --bg: #e0e0e0;
    /* Neutral background */
    --text: #333;
    /* Neutral text color */
    --accent-bg: #d0d0d0;
    --text-light: #666;
    --border: #aaa;
    --accent: #888;
    --accent-hover: #777;
    --accent-text: #e0e0e0;
    --code: #555;
    --preformatted: #444;
    --marked: #ccc;
    --disabled: #f0f0f0;
}

/* Light mode variables */
[data-theme="light"] {
    --bg: #FFF8EF;
    --accent-bg: #f5f7ff;
    --text: #2D2D2D;
    --text-light: #846D6D;
    --border: #898EA4;
    --accent: #F95C3A;
    --accent-hover: #D13E1E;
    --accent-text: var(--bg);
    --code: #d81b60;
    --preformatted: #444;
    --marked: #ffdd33;
    --disabled: #efefef;
}

/* Dark mode variables */
[data-theme="dark"] {
    --bg: #000000;
    --accent-bg: #2b2b2b;
    --text: #ecedee;
    --text-light: #52525B;
    --accent: #F08080;
    --accent-hover: #F95C3A;
    --accent-text: var(--bg);
    --code: #f06292;
    --preformatted: #ccc;
    --disabled: #111;
}

/* Reset box-sizing */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reset default appearance */
textarea,
select,
input,
progress {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
}

html {
    /* Set the font globally */
    font-family: var(--body-font);
    scroll-behavior: smooth;
}

/* Make the body a nice central block */
body {
    color: var(--text);
    background-color: var(--bg);
    font-size: 1.15rem;
    line-height: 1.5;
    display: grid;
    grid-template-columns: 1fr min(60rem, 90%) 1fr;
    margin: 0;
    transition: background-color 0.3s, color 0.3s;
}

body>* {
    grid-column: 2;
}

/* Make the header bg full width, but the content inline with body */
body>header {
    background-color: var(--bg);
    padding: 0;
    grid-column: 1 / -1;
}

/* Add a little padding to ensure spacing is correct between content and header > nav */
main {
    padding-top: 1.5rem;
    margin-top: 110px;
}

body>footer {
    margin-top: 4rem;
    padding: 2rem 1rem 1.5rem 1rem;
    color: var(--text-light);
    font-size: 0.9rem;
    text-align: center;
    /*   border-top: 1px solid var(--border); */
}

/* Format headers */
h1 {
    font-family: var(--title-font);
    font-size: 3rem;
}

h2 {
    font-family: var(--title-font);
    font-size: 2.6rem;
    margin-top: 3rem;
}

h3 {
    font-family: var(--title-font);
    font-size: 2rem;
    margin-top: 3rem;
}

h4 {
    font-family: var(--title-font);
    font-size: 1.44rem;
}

h5 {
    font-family: var(--title-font);
    font-size: 1.15rem;
}

h6 {
    font-family: var(--title-font);
    font-size: 1rem;
    margin: 0;
}

p {
    font-family: var(--body-font);
    margin: 1.5rem 0;
    line-height: 2;
}

/* Prevent long strings from overflowing container */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

/* Fix line height when title wraps */
h1,
h2,
h3 {
    line-height: 1.1;
}

/* Reduce header size on mobile */
@media only screen and (max-width: 768px) {
    h1 {
        font-size: 2rem;
    }

    h2 {
        font-size: 1.75rem;
    }

    h3 {
        font-size: 1.75rem;
    }

    h4 {
        font-size: 1.25rem;
    }

    .mobile {
        width: 100%;
        text-align: left;
        ;
    }

    .big {
        font-size: 2rem;
    }
}

/* Format links & buttons */
a,
a:visited {
    color: var(--accent);
}

a:hover {
    text-decoration: none;
}

.accent {
    color: var(--accent);
}

h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
h6 a,
.accent a {
    color: inherit !important;
    text-decoration: none;
}




button,
.button,
a.button,
/* extra specificity to override a */
input[type="submit"],
input[type="reset"],
input[type="button"],
label[type="button"] {
    border: 1px solid var(--accent);
    background-color: var(--accent);
    color: var(--accent-text);
    padding: 0.5rem 0.9rem;
    text-decoration: none;
    line-height: normal;
}

.button[aria-disabled="true"],
input:disabled,
textarea:disabled,
select:disabled,
button[disabled] {
    cursor: not-allowed;
    background-color: var(--disabled);
    border-color: var(--disabled);
    color: var(--text-light);
}

input[type="range"] {
    padding: 0;
}

/* Set the cursor to '?' on an abbreviation and style the abbreviation to show that there is more information underneath */
abbr[title] {
    cursor: help;
    text-decoration-line: underline;
    text-decoration-style: dotted;
}

button:enabled:hover,
.button:not([aria-disabled="true"]):hover,
input[type="submit"]:enabled:hover,
input[type="reset"]:enabled:hover,
input[type="button"]:enabled:hover,
label[type="button"]:hover {
    background-color: var(--accent-hover);
    border-color: var(--accent-hover);
    cursor: pointer;
}

.button:focus-visible,
button:focus-visible:where(:enabled),
input:enabled:focus-visible:where([type="submit"],
    [type="reset"],
    [type="button"]) {
    outline: 2px solid var(--accent);
    outline-offset: 1px;
}

/* Format navigation */
nav {
    font-size: 1rem;
    line-height: 1.7;
    height: 100%;
}

/* Use flexbox to allow items to wrap, as needed */
nav ul,
nav ol {
    align-items: flex-start;
    display: flex;
    flex-direction: column;
    list-style-type: none;
    margin: 0;
    padding: 0;
}

/* List items are inline elements, make them behave more like blocks */
nav ul li,
nav ol li {
    display: inline-block;
}

nav a,
nav a:visited {
    color: var(--text);
    display: inline-block;
    text-decoration: none;
    font-family: var(--title-font);
}

nav a:hover,
nav a.current,
nav a[aria-current="page"] {
    border-color: var(--accent);
    color: var(--accent);
    cursor: pointer;
}

li[id="current"] a {
    color: var(--text) !important;
}

/* Consolidate box styling */
aside,
details,
pre,
progress {
    background-color: var(--accent-bg);
    border: 1px solid var(--border);
    border-radius: var(--standard-border-radius);
    margin-bottom: 1rem;
}

aside {
    font-size: 1rem;
    width: 30%;
    padding: 0 15px;
    margin-inline-start: 15px;
    float: right;
}

*[dir="rtl"] aside {
    float: left;
}

/* Make aside full-width on mobile */
@media only screen and (max-width: 768px) {
    aside {
        width: 100%;
        float: none;
        margin-inline-start: 0;
    }
}

article,
fieldset,
dialog {
    border: 1px solid var(--border);
    padding: 1rem;
    border-radius: var(--standard-border-radius);
    margin-bottom: 1rem;
}

article h2:first-child,
section h2:first-child {
    margin-top: 1rem;
}

section {
    border-top: 1px solid var(--border);
    border-bottom: 1px solid var(--border);
    padding: 2rem 1rem;
    margin: 3rem 0;
}

/* Don't double separators when chaining sections */
section+section,
section:first-child {
    border-top: 0;
    padding-top: 0;
}

section:last-child {
    border-bottom: 0;
    padding-bottom: 0;
}

details {
    padding: 0.7rem 1rem;
}

summary {
    cursor: pointer;
    font-weight: bold;
    padding: 0.7rem 1rem;
    margin: -0.7rem -1rem;
    word-break: break-all;
}

details[open]>summary+* {
    margin-top: 0;
}

details[open]>summary {
    margin-bottom: 0.5rem;
}

details[open]> :last-child {
    margin-bottom: 0;
}

/* Format tables */
table {
    border-collapse: collapse;
    margin: 1.5rem 0;
}

figure>table {
    width: max-content;
}

td,
th {
    border: 1px solid var(--border);
    text-align: start;
    padding: 0.5rem;
}

th {
    background-color: var(--accent-bg);
    font-weight: bold;
}

tr:nth-child(even) {
    /* Set every other cell slightly darker. Improves readability. */
    background-color: var(--accent-bg);
}

table caption {
    font-weight: bold;
    margin-bottom: 0.5rem;
}

/* Format forms */
textarea,
select,
input,
button,
.button {
    font-size: inherit;
    font-family: inherit;
    padding: 0.5rem;
    margin-bottom: 0.5rem;
    border-radius: var(--standard-border-radius);
    box-shadow: none;
    max-width: 100%;
    display: inline-block;
}

textarea,
select,
input {
    color: var(--text);
    background-color: var(--bg);
    border: 1px solid var(--border);
}

label {
    display: block;
}

textarea:not([cols]) {
    width: 100%;
}

/* Add arrow to drop-down */
select:not([multiple]) {
    background-image: linear-gradient(45deg, transparent 49%, var(--text) 51%),
        linear-gradient(135deg, var(--text) 51%, transparent 49%);
    background-position: calc(100% - 15px), calc(100% - 10px);
    background-size: 5px 5px, 5px 5px;
    background-repeat: no-repeat;
    padding-inline-end: 25px;
}

*[dir="rtl"] select:not([multiple]) {
    background-position: 10px, 15px;
}

/* checkbox and radio button style */
input[type="checkbox"],
input[type="radio"] {
    vertical-align: middle;
    position: relative;
    width: min-content;
}

input[type="checkbox"]+label,
input[type="radio"]+label {
    display: inline-block;
}

input[type="radio"] {
    border-radius: 100%;
}

input[type="checkbox"]:checked,
input[type="radio"]:checked {
    background-color: var(--accent);
}

input[type="checkbox"]:checked::after {
    /* Creates a rectangle with colored right and bottom borders which is rotated to look like a check mark */
    content: " ";
    width: 0.18em;
    height: 0.32em;
    border-radius: 0;
    position: absolute;
    top: 0.05em;
    left: 0.17em;
    background-color: transparent;
    border-right: solid var(--bg) 0.08em;
    border-bottom: solid var(--bg) 0.08em;
    font-size: 1.8em;
    transform: rotate(45deg);
}

input[type="radio"]:checked::after {
    /* creates a colored circle for the checked radio button  */
    content: " ";
    width: 0.25em;
    height: 0.25em;
    border-radius: 100%;
    position: absolute;
    top: 0.125em;
    background-color: var(--bg);
    left: 0.125em;
    font-size: 32px;
}

/* Makes input fields wider on smaller screens */
@media only screen and (max-width: 768px) {

    textarea,
    select,
    input {
        width: 100%;
    }
}

/* Set a height for color input */
input[type="color"] {
    height: 2.5rem;
    padding: 0.2rem;
}

/* do not show border around file selector button */
input[type="file"] {
    border: 0;
}

/* Misc body elements */
hr {
    border: none;
    height: 1px;
    background: var(--border);
    margin: 1rem auto;
}

mark {
    padding: 2px 5px;
    border-radius: var(--standard-border-radius);
    background-color: var(--marked);
    color: black;
}

mark a {
    color: #0d47a1;
}

img,
video {
    max-width: 100%;
    height: auto;
    border-radius: var(--standard-border-radius);
}

figure {
    margin: 0;
    display: block;
    overflow-x: auto;
}

figure>img,
figure>picture>img {
    display: block;
    margin-inline: auto;
}

figure.image {
    padding: 8px;
}

figcaption {
    text-align: center;
    font-size: 0.9rem;
    color: var(--text-light);
    margin-block: 1rem;
}

blockquote {
    margin-inline-start: 2rem;
    margin-inline-end: 0;
    margin-block: 2rem;
    padding: 0.4rem 0.8rem;
    border-inline-start: 0.35rem solid var(--accent);
    color: var(--text-light);
    font-style: italic;
}

cite {
    font-size: 0.9rem;
    color: var(--text-light);
    font-style: normal;
}

dt {
    color: var(--text-light);
}

/* Use mono font for code elements */
code,
pre,
pre span,
kbd,
samp {
    font-family: var(--mono-font);
    color: var(--code);
}

kbd {
    color: var(--preformatted);
    border: 1px solid var(--preformatted);
    border-bottom: 3px solid var(--preformatted);
    border-radius: var(--standard-border-radius);
    padding: 0.1rem 0.4rem;
}

pre {
    padding: 1rem 1.4rem;
    max-width: 100%;
    overflow: auto;
    color: var(--preformatted);
}

/* Fix embedded code within pre */
pre code {
    color: var(--preformatted);
    background: none;
    margin: 0;
    padding: 0;
}

/* Progress bars */
/* Declarations are repeated because you */
/* cannot combine vendor-specific selectors */
progress {
    width: 100%;
}

progress:indeterminate {
    background-color: var(--accent-bg);
}

progress::-webkit-progress-bar {
    border-radius: var(--standard-border-radius);
    background-color: var(--accent-bg);
}

progress::-webkit-progress-value {
    border-radius: var(--standard-border-radius);
    background-color: var(--accent);
}

progress::-moz-progress-bar {
    border-radius: var(--standard-border-radius);
    background-color: var(--accent);
    transition-property: width;
    transition-duration: 0.3s;
}

progress:indeterminate::-moz-progress-bar {
    background-color: var(--accent-bg);
}

dialog {
    max-width: 40rem;
    margin: auto;
}

dialog::backdrop {
    background-color: var(--bg);
    opacity: 0.8;
}

@media only screen and (max-width: 768px) {
    dialog {
        max-width: 100%;
        margin: auto 1em;
    }
}

/* Superscript & Subscript */
/* Prevent scripts from affecting line-height. */
sup,
sub {
    vertical-align: baseline;
    position: relative;
}

sup {
    top: -0.4em;
}

sub {
    top: 0.3em;
}

/* Classes for notices */
.notice {
    background: var(--accent-bg);
    border: 2px solid var(--border);
    border-radius: var(--standard-border-radius);
    padding: 1.5rem;
    margin: 2rem 0;
}

.scrollable {
    overflow-y: auto;
    -ms-overflow-style: none;
    /* IE and Edge */
    scrollbar-width: none;
    /* Firefox */
    height: 100%;
    padding: 0 4px;
}

/* Hide scrollbar for Chrome, Safari and Opera */
.scrollable::-webkit-scrollbar {
    display: none;
}

/* Custom styles */
/* prepare the selectors to add a stroke to */
.outline,
a.outline:visited {
    position: relative;
    color: var(--bg);
    z-index: 1;
    font-family: var(--title-font);
    line-height: 1.1;
}

.outline:hover {
    color: var(--text) !important;
}

.outline:hover:after {
    content: none;
}

.outline:after {
    content: attr(title);
    position: absolute;
    -webkit-text-stroke: 3px var(--text);
    left: 0;
    z-index: -1;
    top: 0;
}

/* h6 .outline:after,
  li .outline:after,
  .nav-right .outline:after */
.outline.small:after {
    -webkit-text-stroke: 1.5px var(--text);
}

.nav-right {
    display: flex;
    padding: 0 8px;
    align-items: center;
}

li[id="current"] .outline:after {
    -webkit-text-stroke: 0;
}

.no-hover:hover {
    color: var(--bg) !important;
}

.no-hover:hover:after {
    content: attr(title);
}

div.divider {
    border: 1px solid var(--text-light);
    height: calc(100%/4);
}

header div.divider {
    border: 1px solid var(--text-light);
    height: 24px;
    ;
}

/*accent color*/
h1.accent,
h2.accent,
h3.accent,
h4.accent,
h5.accent,
h6.accent {
    color: var(--accent);
    font-family: var(--title-font);
}

h5 {
    margin: 0;
}

.card {
    margin: 16px;
    background-color: var(--);
}

.card,
.card figure {
    overflow: hidden;
}

.card a {
    text-decoration: none;
    color: inherit;
}

.card p,
.card h4 {
    margin: 0;
}

.card:hover {
    color: var(--accent-bg);

    background-color: var(--text);
}

.card .content {
    padding: 24px 16px;
}

.card img {
    -webkit-transition: -webkit-transform .3s ease-out;
    transition: -webkit-transform .3s ease-out;
    transition: transform .3s ease-out;
    transition: transform .3s ease-out, -webkit-transform .3s ease-out;
}

.card {
    transition: all .3s ease-out;
}

.card:hover img {
    -webkit-transform: scale(1.05);
    transform: scale(1.05);
}

/* Slide Styles */
.big {
    font-family: var(--title-font);
    font-size: 3rem;
}

@keyframes scroll-1 {
    0% {
        transform: translateX(0);
    }

    100% {
        transform: translateX(-3876px);
        /* put half of the slide width. Have no idea why gap is not working */
    }
}

@keyframes scroll-2 {
    0% {
        transform: translateX(-3860.22px);
    }

    100% {
        transform: translateX(0);
    }
}

@keyframes scroll-3 {
    0% {
        transform: translateX(0);
    }

    100% {
        transform: translateX(-8064.65px);
    }
}

.slider {
    overflow: hidden;
    grid-column: 1 / -1;
}

.slide-track {
    display: flex;
    flex-wrap: nowrap;
    /*   gap: 96px; */
}

.slide-wrap {
    padding: 0 24px;
    display: flex;

}

@media only screen and (max-width: 768px) {
    .slide-wrap {
        padding: 0 24px;
    }
}

.slide {
    box-sizing: border-box;
    text-wrap: nowrap;
}

.track-1 {
    animation: scroll-1 30s linear infinite;
    width: max-content;
}

.track-2 {
    animation: scroll-2 30s linear infinite;
    width: max-content;
}

.track-3 {
    animation: scroll-3 50s linear infinite;
    width: max-content;
}

/* for later. I wanted to add click to see description, but it's not gonna look good. Maybe later when I have another idea. */
/*
  .slider:hover .slide-track{
    animation-play-state: paused;
  }
  */

.header {
    display: flex;
    justify-content: space-between;
    width: 100%;
    height: 110px;
    position: fixed;
    top: 0;
    transition: all 0.3s ease-in;
    z-index: 100;
}

.header-fixed {
    height: 60px;
    position: fixed;
    top: 0;
}

.toc-list-wrapper {
    height: 100%;
    display: flex;
    flex-direction: row-reverse;
    width: calc(440px);
    bottom: 0;
    padding: 0 0 0 1px;
    position: fixed;
    right: 0;
    top: 0;
    z-index: 1;
    transition: all 1s ease;
    visibility: hidden;
    opacity: 0;
}

.toc-item-wrapper {
    position: absolute;
    display: flex;
    gap: 8px;
    transition: all 1s ease;
    align-items: center;
    margin: 0 8px 0 0;
    text-decoration: none;
}

.toc-item {
    /*   visibility: hidden; */
    opacity: 50%;
    transition: opacity 0.5s ease;
    font-family: var(--title-font);
}

.toc-item-marker {
    height: 16px;
    outline: 1px solid var(--text);
}

.text-light {
    color: var(--text-light)
}